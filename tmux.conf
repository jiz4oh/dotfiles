unbind-key C-b
# c-\ is not friendly with my little finger
# ctrl-space in macos is used for switching input method by default, should disable it
set -g prefix 'C-Space'
bind-key 'C-Space' send-prefix

set -g mouse on

# https://github.com/roxma/vim-tmux-clipboard?tab=readme-ov-file#requirements
set -g focus-events on

# https://github.com/ojroques/vim-oscyank?tab=readme-ov-file
set -s set-clipboard on

# https://gist.github.com/ryerh/14b7c24dfd623ef8edc7
setw -g allow-rename      off   # 禁止活动进程修改窗口名
setw -g automatic-rename  off   # 禁止自动命名新窗口
setw -g mode-keys         vi    # 进入复制模式的时候使用 vi 键位（默认是 EMACS）

# disables the possibility of using ESC as the "meta" key
set -sg escape-time 0
# improve colors
# set -g default-terminal 'screen-256color'
# soften status bar color from harsh green to light gray
set -g status-style bg='#666666',fg='#aaaaaa'

# start window numbers at 1 to match keyboard order with tmux window order
set -g base-index 1
set-window-option -g pane-base-index 1

# https://yazi-rs.github.io/docs/image-preview#tmux
set -g allow-passthrough on
set -ga update-environment TERM
set -ga update-environment TERM_PROGRAM

# https://github.com/direnv/direnv/wiki/Tmux
set-option -g update-environment "DIRENV_DIFF DIRENV_DIR DIRENV_WATCHES"
set-environment -gu DIRENV_DIFF
set-environment -gu DIRENV_DIR
set-environment -gu DIRENV_WATCHES
set-environment -gu DIRENV_LAYOUT

bind-key c new-window -c "#{pane_current_path}"
bind -r ( switch-client -p
bind -r ) switch-client -n
bind-key -r C-p previous-window
bind-key -r C-n next-window
bind-key "|" split-window -h -c "#{pane_current_path}"
bind-key "\\" split-window -fh -c "#{pane_current_path}"
bind-key "-" split-window -v -c "#{pane_current_path}"
bind-key "_" split-window -fv -c "#{pane_current_path}"
bind-key "%" split-window -h -c "#{pane_current_path}"
bind-key '"' split-window -v -c "#{pane_current_path}"
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# {{{vim-tmux-navigator
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'M-H' if-shell "$is_vim" 'send-keys M-H'  'select-pane -L'
bind-key -n 'M-J' if-shell "$is_vim" 'send-keys M-J'  'select-pane -D'
bind-key -n 'M-K' if-shell "$is_vim" 'send-keys M-K'  'select-pane -U'
bind-key -n 'M-L' if-shell "$is_vim" 'send-keys M-L'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'M-H' select-pane -L
bind-key -T copy-mode-vi 'M-J' select-pane -D
bind-key -T copy-mode-vi 'M-K' select-pane -U
bind-key -T copy-mode-vi 'M-L' select-pane -R
bind-key -T copy-mode-vi 'M-\' select-pane -l
# }}}

#{{{tmux-plugins
setenv -g TMUX_PLUGIN_MANAGER_PATH '~/.tmux/plugins'
# 推荐的插件（请去每个插件的仓库下读一读使用教程）
set -g @plugin 'seebi/tmux-colors-solarized'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @plugin 'sainnhe/tmux-fzf'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tpm'

# tmux-resurrect
set -g @resurrect-dir '~/.tmux/resurrect'

# tmux-prefix-highlight
set -g status-right '#{prefix_highlight} #H | %a %Y-%m-%d %H:%M'
set -g @prefix_highlight_show_copy_mode 'on'
set -g @prefix_highlight_copy_mode_attr 'fg=white,bg=blue'
# }}}

# Local config
if-shell "[ -f ~/.tmux.conf.local ]" 'source ~/.tmux.conf.local'

# 初始化 TPM 插件管理器 (放在配置文件的最后)
if-shell "[ -d ~/.tmux/plugins/tpm ]" 'run ~/.tmux/plugins/tpm/tpm'
