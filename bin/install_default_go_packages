#!/usr/bin/env bash

# https://github.com/asdf-community/asdf-golang/blob/033730cb54fcd7d2863198ab80294de19f12d09e/bin/install#L29
install_default_go_pkgs() {
  local go_path="$1/go/bin"
  local default_go_pkgs="${ASDF_GOLANG_DEFAULT_PACKAGES_FILE:-${HOME}/.default-golang-pkgs}"
  IFS=. read -r go_major_version go_minor_version <<<"${2}"

  if [ ! -f "$default_go_pkgs" ]; then return; fi

  while read -r line; do
    name=$(echo "$line" |
      sed 's|\(.*\) //.*$|\1|' |
      sed -E 's|^[[:space:]]*//.*||') # the first sed is for comments after package names, the second for full line comments

    # Skip empty lines
    if [ -z "$name" ]; then continue; fi

    echo -ne "\nInstalling \033[33m${name}\033[39m go pkg... " >&2

    # if using go > 1.16 then use go install as the preferred donwload path
    if [ "$go_major_version" -ge 2 ] || [ "${go_minor_version//[!0-9]*/}" -ge 16 ]; then
      if [[ $name != *"@"* ]]; then
        name="${name}@latest"
      fi

      GOROOT="$ASDF_INSTALL_PATH/go" \
        GOPATH="$ASDF_INSTALL_PATH/packages" \
        PATH="$go_path:$PATH" \
        go install "$name" >/dev/null && rc=$? || rc=$?
    else
      GOROOT="$ASDF_INSTALL_PATH/go" \
        GOPATH="$ASDF_INSTALL_PATH/packages" \
        PATH="$go_path:$PATH" \
        go get -u "$name" >/dev/null && rc=$? || rc=$?
    fi

    if [[ $rc -eq 0 ]]; then
      msg "SUCCESS"
    else
      err "FAIL"
    fi
  done <"$default_go_pkgs"
}

install_default_go_pkgs "$ASDF_INSTALL_PATH" "$(go version)"
